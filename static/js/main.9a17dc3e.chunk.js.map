{"version":3,"sources":["Context/ThemeContext.js","Components/ThemeToggler.js","Components/Header.js","Color.js","Components/HeroSection.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","ThemeToggler","useContext","themeMode","setThemeMode","onClick","Header","AppTheme","light","textColor","backgroundColor","border","dark","HeroSection","theme","currentTheme","style","color","padding","textAlign","fontSize","App","themeHook","useState","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KAIeA,G,KAFMC,wBAAc,CAAC,QAAS,gB,cCgB9BC,EAfM,WAAO,IAAD,EACSC,qBAAWH,GADpB,mBAClBI,EADkB,KACPC,EADO,KAEzB,OACE,qBACEC,QAAS,WACPD,EAA2B,UAAdD,EAAwB,OAAS,UAFlD,SAKE,+BACiB,UAAdA,EAAwB,sBAAwB,0BCC1CG,EATA,WACb,OACE,mCACE,+CACA,cAAC,EAAD,QCKWC,EAbA,CACbC,MAAO,CACLC,UAAW,QACXC,gBAAiB,QACjBC,OAAQ,mBAEVC,KAAM,CACJH,UAAW,QACXC,gBAAiB,OACjBC,OAAQ,qBCyBCE,EA9BK,WAClB,IAAMC,EAAQZ,qBAAWH,GAAc,GACjCgB,EAAeR,EAASO,GAE9B,OACE,sBACEE,MAAO,CACLN,gBAAgB,GAAD,OAAKK,EAAaL,iBACjCO,MAAM,GAAD,OAAKF,EAAaN,WACvBS,QAAS,OACTC,UAAW,UALf,UAQE,gEACA,yDACA,wBACEH,MAAO,CACLN,gBAAiB,UACjBQ,QAAS,aACTE,SAAU,OACVH,MAAO,OACPN,OAAO,GAAD,OAAKI,EAAaJ,SAN5B,0BCDSU,EAZH,WACV,IAAMC,EAAYC,mBAAS,SAC3B,OACE,cAAC,EAAaC,SAAd,CAAuBC,MAAOH,EAA9B,SACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,UCAOI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9a17dc3e.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst ThemeContext = createContext([\"light\", () => {}]);\r\n\r\nexport default ThemeContext;\r\n","import React, { useContext } from \"react\";\r\nimport ThemeContext from \"../Context/ThemeContext\";\r\n\r\nconst ThemeToggler = () => {\r\n  const [themeMode, setThemeMode] = useContext(ThemeContext);\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        setThemeMode(themeMode === \"light\" ? \"dark\" : \"light\");\r\n      }}\r\n    >\r\n      <span>\r\n        {themeMode === \"light\" ? \"Turn OFF the lights\" : \"Turns ON the Light\"}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeToggler;\r\n","import React from \"react\";\r\n\r\nimport ThemeToggler from \"./ThemeToggler\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>Theme Toggler</h1>\r\n      <ThemeToggler />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const AppTheme = {\r\n    light: {\r\n      textColor: \"black\",\r\n      backgroundColor: \"white\",\r\n      border: \"2px solid black\",\r\n    },\r\n    dark: {\r\n      textColor: \"white\",\r\n      backgroundColor: \"#333\",\r\n      border: \"2px dashed black\",\r\n    },\r\n  };\r\n  \r\n  export default AppTheme;\r\n  ","import React, { useContext } from \"react\";\r\nimport ThemeContext from \"../Context/ThemeContext\";\r\nimport AppTheme from \"../Color\";\r\n\r\nconst HeroSection = () => {\r\n  const theme = useContext(ThemeContext)[0];\r\n  const currentTheme = AppTheme[theme];\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: `${currentTheme.backgroundColor}`,\r\n        color: `${currentTheme.textColor}`,\r\n        padding: \"1rem\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      <h1 >ThemeToggler using Context API</h1>\r\n      <p >This is a Nice Paragraph</p>\r\n      <button\r\n        style={{\r\n          backgroundColor: \"#26ae60\",\r\n          padding: \"10px 150px\",\r\n          fontSize: \"20px\",\r\n          color: \"#FFF\",\r\n          border: `${currentTheme.border}`,\r\n        }}\r\n      >\r\n        Click Me\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroSection;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ThemeContext from \"./Context/ThemeContext\";\r\nimport Header from \"./Components/Header\";\r\nimport HeroSection from \"./Components/HeroSection\";\r\n\r\nconst App = () => {\r\n  const themeHook = useState(\"light\");\r\n  return (\r\n    <ThemeContext.Provider value={themeHook}>\r\n      <div>\r\n        <Header />\r\n        <HeroSection />\r\n      </div>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}